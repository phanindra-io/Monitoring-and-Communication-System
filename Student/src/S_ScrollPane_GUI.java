
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Phanindra V.V.D
 */
public class S_ScrollPane_GUI extends javax.swing.JPanel implements Runnable {

    /**
     * Creates new form S_ScrollPane_GUI
     */
    protected String hostID[] = new String[100];
    protected String hostNames[] = new String[100];
    private int n; //No.of Connections
    private DefaultListModel dlm;
    protected Student_GUI sdtGUI;
    protected S_Chat_GUI chtGUI[];
    private String ID, name;
    private S_DataTransfer DT;
    int i, index;
    
    public S_ScrollPane_GUI(Student_GUI obj) {
        initComponents();
        
        sdtGUI = obj;
        dlm = (DefaultListModel)jList1.getModel();
        n = 0;
        chtGUI = new S_Chat_GUI[100];        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setLayout(new java.awt.CardLayout());

        listPanel.setLayout(new java.awt.CardLayout());

        jList1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jList1.setModel(new javax.swing.DefaultListModel());
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        listPanel.add(jScrollPane1, "card2");

        add(listPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
        // TODO add your handling code here:
        try{
            int i = getIndex();
            index = i;
            updatePanel(i);
        }
        catch(Exception e)
        {
            System.out.println("Exception !!");
        }
        
        
    }//GEN-LAST:event_jList1MousePressed

    @Override
    public void run() {
   
        receiveIDS();
        DT = new S_DataTransfer(this);
        new Thread(DT).start();
    }
    
    private void initialize()
    {
        try {
            ID = (String)sdtGUI.input.readUTF();
            name = (String)sdtGUI.input.readUTF();
            update(ID, name);
        } catch (IOException ex) {
            System.out.println("IOException : "+ex);
        }
        
    }
    
    protected int getIndex(String id)
    {
        for(i=0; i<n; i++)
        {
            if(id.equals(hostID[i]))
                break;
        }
        
        return i;
    }
     
    private void receiveIDS()
    {
        try {
            int n;
            String s;
            
            i = 0;
            //Receive No. of host connections
            s = sdtGUI.input.readUTF();
            n = Integer.parseInt(s);
            
            if(n==0)
            {
                initialize();
                return;
            }
            
            while(i<n)
            {
                ID = (String)sdtGUI.input.readUTF();
                name = (String)sdtGUI.input.readUTF();
                update(ID, name);               
                i++;
            }
            
        } catch (IOException ex) {
            System.out.println("IOException : "+ex);
        }
    }
    
    protected int getIDIndex(String ID)
    {
        for(i=0; i<n; i++)
        {
            if(ID.equals(hostID[i]))
            {
                break;
            }
        }
        return i;
    }
    
    protected void remove(String ID)
    {
        
        i = getIDIndex(ID);
        
        
        dlm.remove(i);
        
        JOptionPane.showMessageDialog(this, hostNames[i]+" got disconnected");
        
        for(;i<n-1; i++)
        {
            hostID[i] = hostID[i+1];
            hostNames[i] = hostNames[i+1];
            chtGUI[i] = chtGUI[i+1];
        }
        n--;
    }
    
    protected void update(String msg, String name)
    {
        dlm.addElement(name);
        hostNames[n] = name;
        hostID[n] = msg;
        create(n);
        n++;
    }
    
    protected void create(int i)
    {
        chtGUI[i] = new S_Chat_GUI(this, i);
    }
        
    protected void updatePanel(int i)
    {
        sdtGUI.jPanel2.removeAll();
        sdtGUI.jPanel2.repaint();
        sdtGUI.jPanel2.revalidate();
        
        sdtGUI.jPanel2.add(chtGUI[i].chatPanel);
        sdtGUI.jPanel2.repaint();
        sdtGUI.jPanel2.revalidate();
    }

    protected int getIndex()
    {
        return(jList1.getSelectedIndex());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JList jList1;
    protected javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JPanel listPanel;
    // End of variables declaration//GEN-END:variables

}
